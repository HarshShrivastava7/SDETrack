name: CI/CD Pipeline

on:
  push:
    branches:
      - main # Deploy only on pushes to the main branch

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js for Backend
        uses: actions/setup-node@v2
        with:
          node-version: '20' # Specify the Node.js version

      - name: Install Backend Dependencies
        working-directory: server
        run: npm install

      - name: Deploy Backend
        working-directory: server
        # Only run this step if the branch is main
        if: github.ref == 'refs/heads/main'
        env:
          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
        run: |
          curl "$deploy_url"

  deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js for Frontend
        uses: actions/setup-node@v2
        with:
          node-version: '20' # Specify the Node.js version

      - name: Install Frontend Dependencies
        working-directory: client
        run: npm install

      - name: Install Vercel CLI
        working-directory: client
        run: npm install -g vercel

      - name: Build Frontend
        working-directory: client
        run: |
          CI=false npm run build # Set CI to false to ignore warnings

      - name: Link Frontend Project
        working-directory: client
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }} # Your Vercel token
        run: |
          echo "Linking Frontend Project..."
          npx vercel link --project sde-track
          echo "Frontend Project Linked!"

      - name: Deploy Frontend
        working-directory: client
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }} # Your Vercel token
          VERCEL_PROJECT: sde-track
        run: |
          echo "Deploying Frontend..."
          npx vercel --prod --token $VERCEL_TOKEN --confirm 
          echo "Frontend deployed!"
